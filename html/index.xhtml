<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Decaffeinated Alpino Corpus Tool</title>
    <link rel="stylesheet" type="text/css" href="screen.css" />
    <meta name="generator" content="DocBook XSL Stylesheets V1.77.1" />
  </head>
  <body>
    <div class="article"><div class="titlepage"><div><div><h2 class="title"><a id="idp816"></a>Decaffeinated Alpino Corpus Tool</h2></div></div><hr /></div><div class="toc"><p><strong>Table of Contents</strong></p><dl><dt><span class="sect1"><a href="#idp1200">1. Introduction</a></span></dt><dt><span class="sect1"><a href="#idp18976">2. Queries</a></span></dt><dt><span class="sect1"><a href="#idp102016">3. Converting corpora</a></span></dt><dt><span class="sect1"><a href="#idp105440">4. Configuring Dact</a></span></dt><dt><span class="sect1"><a href="#idp115888">5. Marcos</a></span></dt><dt><span class="sect1"><a href="#idp131472">6. Tools</a></span></dt><dt><span class="sect1"><a href="#idp146784">7. Common errors</a></span></dt></dl></div>
    
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp1200"></a>1. Introduction</h2></div></div></div>
        
        <p>If Dact could be started correctly, you can open a corpus in Dact. Dact can only work with Dact corpora, but can convert other types of corpora to a Dact corpus:</p>
        <div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem">
                <p>Compact corpora, consisting of a data and index file (recognizable by
                        the <code class="filename">.data.dz</code> and <code class="filename">.index</code> extensions).</p>
            </li><li class="listitem">
                <p>Directory corpora, which are directories that contain parses.</p>
            </li></ul></div>
        <p>Dact corpora can be opened using the <span class="emphasis"><em>Ctrl+o</em></span> keyboard shortcut (on OS X, use Cmd instead of Ctrl). This will show a dialog that allows you to open the corpus. If you prefer, you can use the <span class="emphasis"><em>File - Open…</em></span> menu item as well.</p>
        <div class="figure"><a id="idp8272"></a><p class="title"><strong>Figure 1. Dact main window</strong></p><div class="figure-contents">
            
            <div class="mediaobject"><img src="../images/dact-osx.png" alt="Dact main window" /></div>
        </div></div><br class="figure-break" />
        <p>After opening a corpus, the window will resemble that in the screenshot above. The
            main Dact Window consists of a filter field and three tabs:</p>
        <div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem">
                <p>The Tree tab shows all entries with matching nodes in the corpus that match your filter query. You can click on an entry to show it dependency tree. You can also open the Inspector using the button in the upper right corner (<span class="emphasis"><em>Ctrl+i</em></span>) and inspect the attributes of individual nodes in the dependency tree by selecting them.</p>
            </li><li class="listitem">
                <p>The Statistics tab shows the occurrences of values of a specific attribute for all the nodes in the corpus that match your filter query. You can specify which attribute with the dropdown menu on this tab.</p>
            </li><li class="listitem">
                <p>The Sentences tab shows the entries containing matching nodes as sentences, and highlights them.</p>
            </li></ul></div>
        <p>Although the corpus can be browsed entry by entry, most functionality of Dact is query-driven. After a short introduction to the query language in the next section, you will be prepared to use other functionality of Dact.</p>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp15296"></a>1.1. Getting a corpus</h3></div></div></div>
            
            <p>Dact comes with a download tool for corpora. Select <span class="emphasis"><em>Tools – Download corpus…</em></span> and choose the corpus you want to download, and press <span class="emphasis"><em>Download</em></span>. You will be asked where you want to store the corpus. After downloading and unpacking the corpus you will have to open it manually using <span class="emphasis"><em>File – Open…</em></span>.</p>
            <div class="figure"><a id="idp17616"></a><p class="title"><strong>Figure 2. Download Corpora window</strong></p><div class="figure-contents">
                
                <div class="mediaobject"><img src="../images/download-corpora-window.png" alt="Download Corpora window" /></div>
            </div></div><br class="figure-break" />
        </div>
    </div>
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp18976"></a>2. Queries</h2></div></div></div>
        
        <p>Queries are written in the <a class="ulink" href="http://en.wikipedia.org/wiki/XPath" target="_top">XPath</a> query language.</p>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp21744"></a>2.1. Matching a node</h3></div></div></div>
            
            <p>Every node in the tree is represented as an <span class="emphasis"><em>node</em></span> element. You can match any node in the tree by using two forward slashes:</p>
            <pre class="programlisting">//node</pre>
            <p>Of course, normally, you would want to match nodes with certain restrictions based on attributes of a node. Such restrictions can be entered between square brackets (<code class="literal">[</code> and <code class="literal">]</code>). And attributes are prefixed by the ‘at’ sign (<code class="literal">@</code>). Commonly-used attributes are:</p>
            <div class="variablelist"><dl class="variablelist"><dt><span class="term">rel</span></dt><dd><p>relation label</p></dd><dt><span class="term">cat</span></dt><dd><p>category</p></dd><dt><span class="term">pos</span></dt><dd><p>part of speech tag</p></dd><dt><span class="term">root</span></dt><dd><p>the root/stem of a lexical node</p></dd></dl></div>
            <p>For instance, the following query will match all nodes with the <span class="emphasis"><em>pos</em></span> attribute, or in other words lexical nodes:</p>
            <pre class="programlisting">//node[@pos]</pre>
            
            <p>We can also restrict the selection by requiring that an attribute has a specific value using the equals sign (<span class="emphasis"><em>=</em></span>). For instance, the following query will match all nodes, which have a <span class="emphasis"><em>pos</em></span> attribute with the value <span class="emphasis"><em>det</em></span>:</p>
            <pre class="programlisting">//node[@pos="det"]</pre>
            
            <p>Such conditions can also be combined. Using the <span class="emphasis"><em>and</em></span> operator will require both conditions to be true, while the <span class="emphasis"><em>or</em></span>operator requires one of the conditions to be true. The following query will match all nodes with a <span class="emphasis"><em>su</em></span> dependency relation, that also have <span class="emphasis"><em>det</em></span> as their part of speech tag:</p>
            <pre class="programlisting">//node[@rel="su" and @pos="det"]</pre>
            
            <p>There are some functions available in XPath which may be useful. For example using <code class="function">not</code> we could find any node that does not match a certain condition. Say we want to match everything except nouns, we could write:</p>
            <pre class="programlisting">//node[not(@pt="n")]</pre>
            
            <p>Or say we wanted to match everything except nouns that are lexical nodes starting with the letter <span class="emphasis"><em>v</em></span>. We can use the <code class="function">starts-with</code> function to require that the <span class="emphasis"><em>root</em></span> attribute starts with the text <span class="emphasis"><em>v</em></span>. The <span class="emphasis"><em>and</em></span> operator will tie them together.</p>
            <pre class="programlisting">//node[not(@pt) and starts-with(@root, "v")]</pre>
            
            <p><code class="function">contains</code> is another function that works just like <code class="function">start-with</code>, except it match if the text is found anywhere in the attribute its value, not just at the beginning.</p>
            <p>We can also make queries based on the structure of a tree. For example, the following query will match any node with a <span class="emphasis"><em>su</em></span> dependency relation that has a determiner: one of the children of the matching node is a node which<span class="emphasis"><em>pos</em></span> attribute has the value <span class="emphasis"><em>det</em></span>.</p>
            <pre class="programlisting">//node[@rel="su" and node[@pos="det"]]</pre>
            
            <p>Now that query matched the <span class="emphasis"><em>su</em></span> node, but we can also match the <span class="emphasis"><em>det</em></span> node. This is useful in the Statistics Window, where the matching nodes are read. This query will do just that:</p>
            <pre class="programlisting">//node[@rel="su"]/node[@pos="det"]</pre>
            
            <p>It first finds the subject nodes, and then matches all the determiners found in these nodes. We can continue this to for example find all the nouns in the noun phrase in a preposition phrase. We first find the preposition phrase somewhere in the tree (mind the double slash), then find the noun phrase among one of its children (the single slash), and then find a noun among the noun phrase its children.</p>
            <pre class="programlisting">//node[@cat="pp"]/node[@cat="np"]/node[@pt="n"]</pre>
            
            <p>This goes down deeper into the tree, but we can also move back up in the tree using double dots. Say we wanted to select all the siblings of a noun node, we can use .. to move up to the parent of the noun node, and then select all the children of this parent node:</p>
            <pre class="programlisting">//node[@pt="n"]/../node</pre>
            
            <p>Or we could select all nodes of which the parent node has a child node which is a noun:</p>
            <pre class="programlisting">//node[../node[@pt="n"]]</pre>
            
            <p>Note that strings, i.e. the text between quotes and attributes can be used interchangeably since an attribute has a string as a value. For example, say we would want to do something silly and try to find all lexical nodes with an attribute <span class="emphasis"><em>pt</em></span> that has the same value al the word of the node, which would mostly be just the letter <span class="emphasis"><em>n</em></span>. The word is accessible through the <span class="emphasis"><em>word</em></span> attribute. So we end up comparing the <span class="emphasis"><em>word</em></span> attribute with the <span class="emphasis"><em>pt</em></span> attribute:</p>
            <pre class="programlisting">//node[@pt=@word]</pre>
            
            <p>And we are not just bound to the attributes of the current node. Say we wanted to find examples the dutch verb<span class="emphasis"><em>krijgen</em></span> used in a passive form. To do this, we have to look for sentences where the subject of the sentence is also the object of the verb phrase. A translation takes place. In the corpus this is indicated by an <span class="emphasis"><em>index</em></span> attribute. This attribute contains the same value on both nodes. I.e.. when we want to see translation 1, this query will highlight both the nodes before and after the translation:</p>
            <pre class="programlisting">//node[@index=1]</pre>
            
            <p>Now using that knowledge we can find the node which contains the verb <span class="emphasis"><em>krijgen</em></span>, a subject, and a object in the verb complement which both share the same value for <span class="emphasis"><em>index</em></span>:</p>
            <pre class="programlisting">//node[ node[@rel="hd" and @root="krijg"] and node[@rel="su"]/@index=node[@rel="vc"]/node[@rel="obj2"]/@index ]</pre>
            <p>(This query was taken from the <a class="ulink" href="http://www.let.rug.nl/~vannoord/alp/Alpino/TreebankTools.html" target="_top">manual for Treebank Tools</a>, which contains some more interesting queries.)</p>

            <div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3>
                <p>When using the position attributes, <code class="literal">@begin</code> and <code class="literal">@end</code>, note that XPath sees them as strings. If you want to compare them, you may want to convert them to numbers first using <code class="literal">number()</code>. For example:</p>
                <pre class="programlisting">//node[@cat="pp" and node[@rel="hd"]/number(@begin) &gt; node[@rel="obj1"]/number(@begin)]</pre>
            </div>
            
            <div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3>
                <p>Please do note that Dact expects queries that return nodes. A highlight query returning the value of an attribute wont highlight any nodes.</p>
            </div>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp61104"></a>2.2. Exploring a corpus</h3></div></div></div>
            
            <p>The left pane on the Tree tab shows a list of corpus entries, where each entry represents a parsed sentence containing at least one node that matched your filter query.</p>
            <p>After typing the query, press the <span class="emphasis"><em>Enter</em></span> key, and Dact will start filtering the corpus. If you want to interrupt filtering, press the <span class="emphasis"><em>Esc</em></span> key. You can also pick one of your previous queries form the history using the arrow on the right of the filter field.</p>
            <p>Using the <span class="emphasis"><em>Next</em></span> and <span class="emphasis"><em>Previous</em></span> arrows in the top left menu bar, you can walk through each found entry. Or you can use the <span class="emphasis"><em>Ctrl+Down</em></span> and <span class="emphasis"><em>Ctrl+Up</em></span> shortcuts.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp65184"></a>2.3. Highlighting nodes</h3></div></div></div>
            
            <p>After selecting an entry, its parse tree is shown in the right pane. To easier to spot interesting phenomena, or test a query, you can enter a separate query in the highlight field. Each node matching the highlight query will be coloured:</p>
            <div class="figure"><a id="idp66608"></a><p class="title"><strong>Figure 3. Highlighted nodes</strong></p><div class="figure-contents">
                
                <div class="mediaobject"><img src="../images/highlighted-nodes.png" alt="Highlighted nodes" /></div>
            </div></div><br class="figure-break" />
            <p>Initially, the filter query is used as the highlight query.</p>
            <p>Matching nodes will be highlighted in the tree in green (you can alter this colour in the Preferences). The buttons <span class="emphasis"><em>Zoom In</em></span> and <span class="emphasis"><em>Zoom Out</em></span> can be used to scale the tree. <span class="emphasis"><em>Previous Node</em></span> and <span class="emphasis"><em>Next Node</em></span> will walk you through all the matching nodes. You can use <span class="emphasis"><em>Ctrl+Left</em></span> and<span class="emphasis"><em>Ctrl+Right</em></span> as well. The focussed node will then be marked by a slightly thicker border. Normally, the scroll wheel is used for panning the tree. but when you press <span class="emphasis"><em>Ctrl</em></span>, scrolling will cause the tree to scale. <span class="emphasis"><em>Ctrl+=</em></span> and <span class="emphasis"><em>Ctrl+-</em></span> can also be used to zoom in and out, and <span class="emphasis"><em>Ctrl+0</em></span> resets the zoom level to show the whole tree, just like <span class="emphasis"><em>Fit</em></span> button on the toolbar does.</p>
            <p>The leaf nodes have tool tips showing more details about the node.</p>
            <p>Below the tree the sentence is shown, and the parts in the sentence represented by the matching nodes are highlighted.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp75088"></a>2.4. Inspecting nodes</h3></div></div></div>
            
            <p>If you want to know more about a node, you can select it and open the Inspector by clicking its button on the right hand side of the toolbar, pressing <span class="emphasis"><em>Ctrl+i</em></span> or by enabling it in the <span class="emphasis"><em>View</em></span> menu. This is very useful for writing queries.</p>
            <div class="figure"><a id="idp77280"></a><p class="title"><strong>Figure 4. Main window with inspector attached</strong></p><div class="figure-contents">
                
                <div class="mediaobject"><img src="../images/inspector.png" alt="Main window with inspector attached" /></div>
            </div></div><br class="figure-break" />
            <p>The Inspector will show you every attribute the focussed node has. You can right-click an attribute and use the context menu to directly add it to your search query.</p>
            <div class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Tip</h3>
                <p>The Inspector is detachable and can be torn of the Main window.</p>
            </div>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp80816"></a>2.5. Gathering statistics</h3></div></div></div>
            
            <p>The Statistics tab shows which values can be found for a certain attribute of the matching nodes throughout the corpus. These nodes can be filtered using the same XPath queries. If a node does match the filter, but does not have the attribute, it will be counted as <span class="emphasis"><em>[missing attribute]</em></span>.</p>
            <div class="figure"><a id="idp82816"></a><p class="title"><strong>Figure 5. Statistics tab</strong></p><div class="figure-contents">
                
                <div class="mediaobject"><img src="../images/statistics-tab.png" alt="Statistics tab" /></div>
            </div></div><br class="figure-break" />
            <p>Make sure to use a filter which matches the nodes you want to know the values of. For example, say we wanted to know how often every preposition occurs in a preposition phrase. We need to filter for the preposition nodes that are children of a preposition phrase node:</p>
            <pre class="programlisting">//node[@cat="pp"]/node[@pt="vz"]</pre>
            <p>If you are unsure whether your filter will match too many or too little nodes, try to test it visually in the Tree tab by using your query as the highlight query.</p>
            <p>Because we want to know how often the word occurs, we select the <code class="literal">word</code> or <code class="literal">lemma</code> attribute from the drop-down menu.</p>
            <p>The <span class="emphasis"><em>Value</em></span> column shows all the distinct values found, and the <span class="emphasis"><em>Nodes</em></span> column shows how often nodes with these values where encountered. The <span class="emphasis"><em>percentage</em></span> column puts this number into perspective by showing how much this is as a percentage of the total count of found values. This total is shown in the bottom right of the window, as is the number of distinct values (i.e. the number of rows in the table).</p>
            <p>You can double-click one of the rows to search for all nodes that together are summed up in that row. Dact will automatically generate a new filter query for you.</p>
            <p>When copying rows to the clipboards, they will be pasted as a tab-separated plain-text table. Excel and many other programs are able to import this format when pasting it into a document.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp81072"></a>2.6. Exporting Statistics</h3></div></div></div>
            
            <p>The results from the Statistics tab can be saved in various formats: plain text, HTML, Excel worksheet and CSV. Go to the <span class="emphasis"><em>File - Save as…</em></span> menu and select the file type from the drop-down menu in the save dialog.</p>
            <div class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Tip</h3>
                <p>Note that this menu item also works for other the Sentences tab.</p>
            </div>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp93312"></a>2.7. Sentences</h3></div></div></div>
            
            <p>To quickly get an impression which part of a sentence matches a query, you can use the <span class="emphasis"><em>Sentences</em></span> tab.</p>
            <div class="figure"><a id="idp94976"></a><p class="title"><strong>Figure 6. Sentences tab</strong></p><div class="figure-contents">
                
                <div class="mediaobject"><img src="../images/sentences-tab.png" alt="Sentences tab" /></div>
            </div></div><br class="figure-break" />
            <p>The window highlights the part of a sentence which matches the query for all the sentences in the corpus where at least one matching node is found.</p>
            <p>You can select alternative display modes using the drop-down menu. Currently three methods are implemented:</p>
            <div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem">
                    <p><span class="emphasis"><em>Complete Sentence</em></span> shows the matching nodes in the sentence on a different background. Nested matches have a more opaque background. The colour can be changed in Dact's Preference Window.</p>
                </li><li class="listitem">
                    <p><span class="emphasis"><em>Only Matches</em></span> shows only partial sentences of the nodes that matched.</p>
                </li><li class="listitem">
                    <p><span class="emphasis"><em>Keywords in Context</em></span> shows all the matches directly underneath each other and prints the rest of the sentence left and right of the match. These colours can also be configured in Dact's Preference Window.</p>
                </li></ul></div>
        </div>
    </div>
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp102016"></a>3. Converting corpora</h2></div></div></div>
        
        <p>Dact can only work with Dact corpora, but it can create these from any Directory and Compact corpus. To convert a Directory or Compact corpus, go to the <span class="emphasis"><em>Tools - Convert corpus</em></span> submenu, and choose your type. Dact will prompt you for the location of your corpus, and where to save the new Dact corpus. Afterwards you can open the newly generated Dact corpus using the <span class="emphasis"><em>File - Open…</em></span> menu item. </p>
        <div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3>
            <p>Note that <span class="emphasis"><em>your original corpus won't be affected</em></span> in this process.</p>
        </div>
    </div>
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp105440"></a>4. Configuring Dact</h2></div></div></div>
        
        <p>Dact has some preferences you can change it to suit more to your needs. You can configure the font and colours of the interface. You can find these in the Preference window, which you can find in <span class="emphasis"><em>Edit</em></span> menu. (On OS X, you will find it in the application menu like any other OS X application.) Changes are automatically applied and saved.</p>
        <p>If you accidentally mess up, you can always return to the default preferences Dact ships with by clicking the <span class="emphasis"><em>Return to Default</em></span> button in a tab. The preferences will be restored to their default values.</p>
        <div class="figure"><a id="idp108240"></a><p class="title"><strong>Figure 7. Preferences window</strong></p><div class="figure-contents">
            
            <div class="mediaobject"><img src="../images/preferences-window.png" alt="Preferences window" /></div>
        </div></div><br class="figure-break" />
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp109680"></a>4.1. Font and colours</h3></div></div></div>
            
            <p>Dact allows you to choose your own colours and font used in the interface to some extend.</p>
            <p>Note that the OS X version of Dact does not have a <span class="emphasis"><em>Font</em></span> tab. In the other versions of Dact you can change the font that is used for the buttons and lists throughout Dact.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp109520"></a>4.2. Network</h3></div></div></div>
            
            <p>Dact's <span class="emphasis"><em>Download corpus</em></span>, <span class="emphasis"><em>Open remote corpus</em></span> and <span class="emphasis"><em>Parse sentences</em></span> features use web services to function. The addresses of these web services can be changed.</p>
            <div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3>
                <p>Note that not all of these features may be enabled in your version of Dact as of the time of writing not all of the required web services are publicly available.</p>
            </div>
        </div>
    </div>
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp115888"></a>5. Marcos</h2></div></div></div>
        
        <p>Dact supports macros in its XPath queries. You can insert simple placeholders in your query which are expanded before a query is evaluated. A placeholder is the name of the macro surrounded by percentage signs (<code class="literal">%</code>).</p>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp117680"></a>5.1. Using a macro</h3></div></div></div>
            
            <p>Given you have loaded a file with the following macro:</p>
            <pre class="programlisting">interesting = """ @rel="su" or @rel="vc" """</pre>
            <p>When you enter the following query in to the filter query field:</p>
            <pre class="programlisting">//node[%interesting%]</pre>
            <p>Dact replace the placeholder, and execute the following query:</p>
            <pre class="programlisting">//node[ @rel="su" or @rel="vc" ]</pre>
            <p>Since Dact only does simple text replacement, you can also use invalid or partial XPath code as replacement. As long as the expanded query is valid, Dact will accept it.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp121408"></a>5.2. Loading a file with Macros</h3></div></div></div>
            
            <p>You can load a file with macros with the <span class="emphasis"><em>Macros - Load file…</em></span> menu item. When the file is successfully loaded, a submenu with the same name as the filename is visible in the <span class="emphasis"><em>Macros</em></span> menu, containing all the macros in the file.</p>
            <p>When you have focused one of the XPath query fields in Dact, you can select one of the macros from the <span class="emphasis"><em>Macros</em></span> menu to insert it at the position of your text cursor.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp124496"></a>5.3. Macros file syntax</h3></div></div></div>
            
            <p>Macro files are rather simple and can be created with any plain text editor. Macros have the following syntax:</p>
            <pre class="programlisting">placeholder = """replacement"""</pre>
            <p><code class="literal">placeholder</code> is the name of your macro, and <code class="literal">replacement</code> the XPath code it will be replaced with. The name and replacement are separated by a <code class="literal">=</code>, and the replacement has to be surrounded by three pairs of double quotes. <code class="literal">replacement</code> may span several lines.</p>
            <p>Dact also expands macros while loading them. This way, you can use macros you defined earlier on in a file in your macros.</p>
            <div class="figure"><a id="idp128656"></a><p class="title"><strong>Figure 8. Example of macros file</strong></p><div class="figure-contents">
                
                <pre class="programlisting">
b = """number(@begin)"""
e = """number(@end)"""

headrel = """ ( @rel="hd" or @rel="cmp" or @rel="mwp" or @rel="crd" or @rel="rhd" or @rel="whd" or @rel="nucl" or @rel="dp") """

precedes_head_of_smain = """
(  ancestor::node[@cat="smain"]/
             node[@rel="hd"]/%b% 
           &gt; node[%headrel%]/%b% 
   or 
   ancestor::node[@cat="smain"]/
             node[@rel="hd"]/%b% 
           &gt; %b% and @pos
)
"""
</pre>
            <div class="caption">Notice how <code class="literal">precedes_head_of_smain</code> makes use of the <code class="literal">headrel</code> macro.</div>
            </div></div><br class="figure-break" />
        </div>
    </div>
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp131472"></a>6. Tools</h2></div></div></div>
        
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp132272"></a>6.1. Using tools</h3></div></div></div>
            
            <p>In both the Tree and Sentences tab the individual files matching your filter query are shown. You can add additional entries to the context menu for these files by configuring tools. For example, you could configure a text editor to show the raw XML data of the selected sentence.</p>
            <p>If you have selected multiple files, Dact will start the selected tool once for each file.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp134096"></a>6.2. Configuring tools</h3></div></div></div>
            
            <p>The path to a tools configuration file can be set in the Preferences of Dact. Once the path is set, the file is loaded when you open the tools context menu. If you update the file after that, Dact will reload it automatically.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp135584"></a>6.3. Tools configuration file syntax</h3></div></div></div>
            
            <p>The syntax of the tools configuration file looks a lot like the one used by the macros. In addition to this, you can use <code class="literal">%1</code> as placeholder for the filename of the selected file as shown by Dact in the Tree tab. For example, to define an "Edit Text" menu entry: </p><pre class="programlisting">Edit Text = """gedit "~/treebanks/cdb/%1""""</pre>
            <div class="tip" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Tip</h3>
                <p>In this example the complete path is surrounded by quotes, as the filename may contain spaces.</p>
            </div>
            <p>Unfortunately, the XML files Dact uses are not accessible outside of the Dact database files. But if you have the raw XML files installed somewhere (e.g. in <code class="literal">~/treebanks/cdb</code>), you can refer to those.</p>
        </div>
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp139440"></a>6.4. Tools for a specific treebank</h3></div></div></div>
            
            <p>Because you cannot let the tools interact with the treebank, you might need to configure your tools differently for each treebank you use. E.g. your <code class="literal">cdb.dact</code> might need to use the files in <code class="literal">~/treebanks/cdb</code> while you have all your XML files for <code class="literal">wikipedia.dact</code> in <code class="literal">/net/shared/treebanks/wikipedia</code>.</p>
            <p>To allow you to specify a tool for just a few specific treebanks, you can add subsections to your tools configuration file with the path of the treebank files as name. Fortunately, you can use wildcards in these filenames. Only when the path of the currently loaded treebank matches this pattern, all tools in this subsection will be shown in the tools context menu.</p>
            <div class="figure"><a id="idp142912"></a><p class="title"><strong>Figure 9. Example of macros file</strong></p><div class="figure-contents">
                
                <pre class="programlisting">
mark = """bash -c "echo \"%1\" &gt;&gt; ~/marked_entries.txt" """

[*/cdb.dact]
show xml = """gedit "~/treebanks/cdb/%1""""
email name = """bash -c "echo \"%1\" | sendmail -v someone@domain" """

[*/wikipedia*.dact]
show xml = """gedit "/net/shared/treebanks/wikipedia/%1""""
</pre>
                <div class="caption">The <code class="literal">show xml</code> tool is specific for the treebank you currently use. The <code class="literal">mark</code> tool is not inside a section and will be shown for every treebank. The <code class="literal">email name</code> tool will only show up if your current treebank is named <code class="literal">cdb.dact</code>.</div>
            </div></div><br class="figure-break" />
        </div>
    </div>
    <div class="sect1"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="idp146784"></a>7. Common errors</h2></div></div></div>
        
        <div class="sect2"><div class="titlepage"><div><div><h3 class="title"><a id="idp147424"></a>7.1. The application failed to initialize properly (0xc0000022)</h3></div></div></div>
            
            <p>If you get the error <code class="literal">The application failed to initialize properly (0xc0000022)</code> it means that something is wrong with the DLL permissions. Presumably with the .dll files in the Dact distribution.</p>
            <p>You can fix this problem by opening a command prompt, and cd to the directory in which the Dact files reside. Then type:</p>
            <pre class="programlisting">cacls *.dll /E /G BUILTIN\Users:R</pre>
        </div>
    </div>
</div>
  </body>
</html>
